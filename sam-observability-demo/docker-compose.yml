---
# version: "3"
services:
  # Postgres Config for all services
  postgres-db:
    container_name: postgres-db
    image: postgres:latest
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: samirandeb
      POSTGRES_PASSWORD: password
    volumes:
      - ./postgres_db:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: always

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.2.0
    ports:
      - "9200:9200"
    environment:
      - "discovery.type=single-node"
    volumes:
      - ./elasticsearch/data:/usr/share/elasticsearch/data:rw              # Persistence data

  logstash:
    image: docker.elastic.co/logstash/logstash:7.2.0
    ports:
      - "25826:25826"
      - "5044:5044"
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro                # Pipeline configuration
    restart: on-failure
    depends_on:
      - elasticsearch

  kibana:
    image: docker.elastic.co/kibana/kibana:7.2.0
    ports:
      - "5601:5601"
    restart: on-failure
    depends_on:
      - elasticsearch

  filebeat:
    image: docker.elastic.co/beats/filebeat:7.2.0
    volumes:
      - ./filebeat/filebeat.docker.yml:/usr/share/filebeat/filebeat.yml:ro # Configuration file
      - /var/lib/docker/containers:/var/lib/docker/containers:ro           # Docker logs
      - /var/run/docker.sock:/var/run/docker.sock:ro                       # Additional information about containers
      - ./filebeat/data:/usr/share/filebeat/data:rw                        # Persistence data
      - /var/log/syslog:/var/log/syslog:ro
      - /var/log/auth.log:/var/log/auth.log:ro
    user: root                                                             # Allow access to log files and docker.sock
    restart: on-failure
    # entrypoint: sh -c "chmod go-w /usr/share/filebeat/filebeat.yml && /usr/local/bin/docker-entrypoint -e"
    depends_on:
      - logstash

  # API Gateway Service Config
  api-gateway:
    image: samirandeb79/api-gateway:elk
    container_name: api-gateway
    pull_policy: always
    ports:
      - "8181:8181"
    expose:
      - "8181"
    environment:
      - SERVER_PORT=8181
    depends_on:
      - postgres-db
    labels:
      collect_logs_with_filebeat: "true"
      decode_log_event_to_json_object: "true"

  # Product Service Config
  product-service:
    container_name: product-service
    image: samirandeb79/product-service:elk
    pull_policy: always
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-db:5432/postgres
      - SPRING_DATASOURCE_USERNAME=samirandeb
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=org.postgresql.Driver
      - SPRING_DATASOURCE_PASSWORD=password
      - SERVER_PORT=8080
    depends_on:
      - postgres-db
      # - api-gateway
    labels:
      collect_logs_with_filebeat: "true"
      decode_log_event_to_json_object: "true"

  # Order Service Config
  order-service:
    container_name: order-service
    image: samirandeb79/order-service:elk
    pull_policy: always
    ports:
      - "8081:8081"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-db:5432/postgres
      - SPRING_DATASOURCE_USERNAME=samirandeb
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=org.postgresql.Driver
      - SPRING_DATASOURCE_PASSWORD=password
      - SERVER_PORT=8081
    depends_on:
      - postgres-db
      - api-gateway
    labels:
      collect_logs_with_filebeat: "true"
      decode_log_event_to_json_object: "true"

  # Inventory Service Config
  inventory-service:
    container_name: inventory-service
    image: samirandeb79/inventory-service:elk
    pull_policy: always
    ports:
      - "8082:8082"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-db:5432/postgres
      - SPRING_DATASOURCE_USERNAME=samirandeb
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=org.postgresql.Driver
      - SPRING_DATASOURCE_PASSWORD=password
      - SERVER_PORT=8082
    depends_on:
      - postgres-db
      - api-gateway
    labels:
      collect_logs_with_filebeat: "true"
      decode_log_event_to_json_object: "true"
