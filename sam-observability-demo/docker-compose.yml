---
# version: "3"
services:
  # Postgres Config for all services
  postgres-db:
    container_name: postgres-db
    image: postgres:latest
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: samirandeb
      POSTGRES_PASSWORD: password
    volumes:
      - ./postgres_db:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: always

  # Apache Kafka (Broker) Config
  broker:
    image: confluentinc/cp-kafka:7.6.0
    container_name: broker
    ports:
      - "9092:9092"
    # depends_on:
    #   - zookeeper
    environment:
      CLUSTER_ID: c2FteC1kZW1vLWJyb2tlcg==
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_LOG_DIRS: /tmp/kraft-combined-logs
      KAFKA_NUM_PARTITIONS: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1


  # Zipkin Config
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"

  # Discovery Server (Eureka Server) Config
  discovery-server:
    image: samirandeb79/discovery-server:latest
    container_name: discovery-server
    pull_policy: always
    ports:
      - "8761:8761"
    environment:
      - SERVER_PORT=8761
      - MANAGEMENT_ZIPKIN_TRACING_ENDPOINT=http://zipkin:9411/api/v2/spans
    depends_on:
      - zipkin

  # API Gateway Service Config
  api-gateway:
    image: samirandeb79/api-gateway:latest
    container_name: api-gateway
    pull_policy: always
    ports:
      - "8181:8080"
    expose:
      - "8181"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka
      - SERVER_PORT=8080
      - MANAGEMENT_ZIPKIN_TRACING_ENDPOINT=http://zipkin:9411/api/v2/spans
    depends_on:
      - zipkin
      - discovery-server

  # Product Service Config
  product-service:
    container_name: product-service
    image: samirandeb79/product-service:latest
    pull_policy: always
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-db:5432/postgres
      - SPRING_DATASOURCE_USERNAME=samirandeb
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=org.postgresql.Driver
      - SPRING_DATASOURCE_PASSWORD=password
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - SERVER_PORT=8080
      - MANAGEMENT_ZIPKIN_TRACING_ENDPOINT=http://zipkin:9411/api/v2/spans
    depends_on:
      - postgres-db
      - zipkin
      - discovery-server
      - api-gateway

  # Order Service Config
  order-service:
    container_name: order-service
    image: samirandeb79/order-service:latest
    pull_policy: always
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-db:5432/postgres
      - SPRING_DATASOURCE_USERNAME=samirandeb
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=org.postgresql.Driver
      - SPRING_DATASOURCE_PASSWORD=password
      - SERVER_PORT=8080
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - MANAGEMENT_ZIPKIN_TRACING_ENDPOINT=http://zipkin:9411/api/v2/spans
      - SPRING_KAFKA_BOOTSTRAPSERVERS=broker:9092
    depends_on:
      - postgres-db
      - broker
      - zipkin
      - discovery-server
      - api-gateway

  # Inventory Service Config
  inventory-service:
    container_name: inventory-service
    image: samirandeb79/inventory-service:latest
    pull_policy: always
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-db:5432/postgres
      - SPRING_DATASOURCE_USERNAME=samirandeb
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=org.postgresql.Driver
      - SPRING_DATASOURCE_PASSWORD=password
      - SERVER_PORT=8080
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - MANAGEMENT_ZIPKIN_TRACING_ENDPOINT=http://zipkin:9411/api/v2/spans
    depends_on:
      - postgres-db
      - zipkin
      - discovery-server
      - api-gateway

  # Notification Service Config
  notification-service:
    container_name: notification-service
    image: samirandeb79/notification-service:latest
    pull_policy: always
    environment:
      - SERVER_PORT=8080
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka
      - MANAGEMENT_ZIPKIN_TRACING_ENDPOINT=http://zipkin:9411/api/v2/spans
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=broker:9092
    depends_on:
      - broker
      - zipkin
      - discovery-server
      - api-gateway

  # Prometheus Config
  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - product-service
      - order-service
      - inventory-service
      - notification-service

  # Grafana Config
  grafana:
    container_name: grafana
    image: grafana/grafana-oss:latest
    restart: always
    ports:
      - "3000:3000"
    links:
      - prometheus:prometheus
    # volumes:
    #   - ./grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=password